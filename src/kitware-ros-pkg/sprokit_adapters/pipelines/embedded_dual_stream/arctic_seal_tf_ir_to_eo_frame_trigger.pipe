# ============================== GLOBAL PROPERTIES =================================
# global pipeline config
#
config _pipeline:_edge
   :capacity                                   5

# ============================= INPUT / OUTPUT NODES ===============================
process in_adapt
 :: input_adapter

process out_adapt
 :: output_adapter

process downsampler
  :: downsample
  _non_blocking =                              4

connect from in_adapt.image
        to   downsampler.input_1
connect from in_adapt.file_name
        to   downsampler.input_2

connect from in_adapt.image2
        to   downsampler.input_3
connect from in_adapt.file_name
        to   downsampler.input_4

# ================================= IR DETECTOR ====================================

process thermal_detector
  :: image_object_detector
  :detector:type                               tensorflow

  block detector:tensorflow
    relativepath model_file =                  ../models/arctic_seal_ir.pb
    :norm_image_type                           adaptive_min_fixed_range
    :fixed_range                               7000
    :confidence_thresh                         0.25
    :category_name                             hotspot
    :memory_usage                              0.50
  endblock

connect from downsampler.output_3
        to   thermal_detector.image

# ================================= EO DETECTOR ====================================

process optical_trigger
  :: filter_frames
  :detection_threshold                         0.01

process optical_detector
  :: image_object_detector
  :detector:type                               tensorflow

  block detector:tensorflow
    relativepath model_file =                  ../models/arctic_seal_eo.pb
    :confidence_thresh                         0.25
    :category_name                             seal
    :memory_usage                              0.50
  endblock

connect from downsampler.output_1
        to   optical_trigger.image
connect from thermal_detector.detected_object_set
        to   optical_trigger.detected_object_set

connect from optical_trigger.image
        to   optical_detector.image

# =============================== FUSION AND OUTPUT ================================

connect from optical_detector.detected_object_set
        to   out_adapt.detected_object_set
connect from downsampler.output_2
        to   out_adapt.file_name

connect from thermal_detector.detected_object_set
        to   out_adapt.detected_object_set2
connect from downsampler.output_4
        to   out_adapt.file_name2

# ================================== CSV WRITERS ===================================

process optical_writer_csv
  :: detected_object_output

  # Type of file to output
  :file_name                                   $ENV{DETECTION_CSV_DIR}/EO.csv
  :frame_list_output                           $ENV{IMAGE_LIST_DIR}/EO_images.txt
  :writer:type                                 viame_csv

connect from optical_detector.detected_object_set
        to   optical_writer_csv.detected_object_set
connect from downsampler.output_2
        to   optical_writer_csv.image_file_name

process thermal_writer_csv
  :: detected_object_output

  # Type of file to output
  :file_name                                   $ENV{DETECTION_CSV_DIR}/IR.csv
  :frame_list_output                           $ENV{IMAGE_LIST_DIR}/IR_images.txt
  :writer:type                                 viame_csv

connect from thermal_detector.detected_object_set
        to   thermal_writer_csv.detected_object_set
connect from downsampler.output_4
        to   thermal_writer_csv.image_file_name

# ================================== DB WRITERS ====================================

#process optical_filter_db
#  :: initialize_object_tracks
#  :track_initializer:type                      threshold
#
#  block track_initializer:threshold:filter
#    :type                                      class_probablity_filter
#    :class_probablity_filter:threshold         0.010
#    :class_probablity_filter:keep_all_classes  true
#  endblock

#process optical_writer_db
#  :: write_object_track
#  :file_name                                   none
#  :writer:type                                 db
#  :writer:db:conn_str                          postgresql:host=localhost;user=postgres
#  :writer:db:video_name                        optical_stream

#connect from in_adapt.timestamp
#        to   downsampler.timestamp

#connect from downsampler.timestamp
#        to   optical_filter_db.timestamp
#connect from optical_detector.detected_object_set
#        to   optical_filter_db.detected_object_set

#connect from downsampler.timestamp
#        to   optical_writer_db.timestamp
#connect from optical_filter_db.object_track_set
#        to   optical_writer_db.object_track_set

#process thermal_filter_db
#  :: initialize_object_tracks
#  :track_initializer:type                      threshold
#
#  block track_initializer:threshold:filter
#    :type                                      class_probablity_filter
#    :class_probablity_filter:threshold         0.010
#    :class_probablity_filter:keep_all_classes  true
#  endblock

#process thermal_writer_db
#  :: write_object_track
#  :file_name                                   none
#  :writer:type                                 db
#  :writer:db:conn_str                          postgresql:host=localhost;user=postgres
#  :writer:db:video_name                        thermal_stream

#connect from downsampler.timestamp
#        to   thermal_filter_db.timestamp
#connect from thermal_detector.detected_object_set
#        to   thermal_filter_db.detected_object_set

#connect from downsampler.timestamp
#        to   thermal_writer_db.timestamp
#connect from thermal_filter_db.object_track_set
#        to   thermal_writer_db.object_track_set

# -- end of file --
